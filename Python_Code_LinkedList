class Node:
  def __init__(self, data):
    self.data = data 
    self.ref = None

class LinkedList:
  def __init__(self):
    self.head = None
  
  def print(self):
    if self.head is None:
      print("Linked List is empty")
    else:
      n = self.head
      while n is not None:
        print(n.data, "-->", end =" ")
        n = n.ref 
  
  def add_begin(self, data): 
    new_node = Node(data)
    new_node.ref = self.head
    self.head = new_node  
    

  def append(self,data):
    new_node = Node(data)
    if self.head is None:
      self.head = new_node
    else: 
      n = self.head 
      while n.ref is not None:
        n = n.ref
      n.ref = new_node 

  def add_after(self, data, x):
    n = self.head 
    while n is not None:
      if x == n.data:
        break
      n = n.ref
    if n == None:
      print("The node doesn't exist in the Linked List")
    else:
      new_node = Node(data)
      new_node.ref = n.ref 
      n.ref = new_node

  def add_before(self,data, x):
    n = self.head
    if n is None:
      print("Linked List is empty")
      return
    if x == n.data:
      new_node = Node(data)
      new_node.ref = n
      n = new_node
      return
    else:
      while n.ref is not None:
        if x == n.ref.data:
          break
        n = n.ref 
      if n.ref == None:
        print("The node does not exist in the Linked List")
        return
      else:
        new_node = Node(data)
        new_node.ref = n.ref
        n.ref = new_node
  def delete(self,x):
    if self.head is None:
      print("Linked List is empty. Nothing to delete.")
      return
    elif self.head.data == x:
      self.head = self.head.ref 
      return
    else:
      n = self.head 
      while n.ref is not None:
        if x == n.ref.data:
          break
        n = n.ref
      if n.ref == None:
        print("The node to be deleted does not exist in the Linked List.")
        return
      else:
        n.ref = n.ref.ref 

       

ll = LinkedList()
ll.append(5)
ll.append(10)
ll.add_before(20,10)
ll.add_after(16,20)
ll.delete(3)
ll.print()       
